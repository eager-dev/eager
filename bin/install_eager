#!/bin/bash

CURRENT_DIR=$PWD

if [[ -z "$ROS_DISTRO" ]]; then
  echo "ROS is not installed, please install ROS first."
  exit 1
fi

echo "Enter desired EAGER root install location. If it does not exist, it will be created."
echo "Press enter for default: ${HOME}"
read input
if [[ ! ${#input} -ge 1  ]]; then
  EAGER_ROOT=${HOME}
elif [[ ! -d $input ]]; then
  mkdir -p $input
  EAGER_ROOT=${input}
else
  EAGER_ROOT=${input}
fi

EAGER_HOME=${EAGER_ROOT}/eager

if [ ! -d ${EAGER_HOME} ]; then
  cd ${EAGER_ROOT}
  echo Cloning EAGER...
  git clone https://github.com/eager-dev/eager.git
fi

cd $CURRENT_DIR

echo "Enter desired location of catkin workspace. If it does not exist, it will be created."
echo "Press enter for default: ${HOME}/eager_ws"
input=0
read input
if [[ ! ${#input} -ge 1  ]]; then
  EAGER_WS=${HOME}/eager_ws
elif [[ ! -d $input ]]; then
  mkdir -p ${input}/src
  EAGER_WS=${input}
else
  if [[ ! -d $input/src ]]; then
    mkdir -p ${input}/src
  fi
  EAGER_WS=${input}
fi

EAGER_WS=${HOME}/eager_ws

if [ ! -d ${HOME}/eager_ws ]; then
  echo "Creating eager_ws"
  cd ${HOME}
  mkdir -p eager_ws/src
  cd ${EAGER_WS}/src
  ln -s ${EAGER_HOME}/eager_core
fi

if [ ! -d ${EAGER_WS}/src/eager_core ]; then
  cd ${EAGER_WS}/src
  ln -s ${EAGER_HOME}/eager_core
fi

echo "Do you wish to install all EAGER packages? (y/n)"
invalid_input=true
full_install=false
while [[ $invalid_input = true ]]; do
  read input
  if [[ "$input" = "y" ]]; then
    full_install=true
    invalid_input=false
    cd ${EAGER_WS}/src
    ln -s ${EAGER_HOME}/examples
  elif [[ "$input" = "n" ]]; then
    invalid_input=false
  fi
done

cd ${EAGER_WS}/src
packages_to_install=()
package_types="bridge process robot sensor solid"
package_folders="bridges processors robots sensors solids"
package_folders_array=($package_folders)
COUNTER=0
for package_type in $package_types; do
  package_folder=eager_${package_folders_array[$COUNTER]}
  cd ${EAGER_WS}/src
  installed=$(ls | grep eager_$package_type)
  echo Installed $package_type packages:
  echo $installed
  available=$(ls ${EAGER_HOME}/$package_folder | grep eager_$package_type)
  not_installed=()
  for available_package in $available; do
    if [[ ! " $installed " =~ $available_package ]]; then
      not_installed+=("$available_package")
    fi
  done
  if [ ${#not_installed[@]} -ge 1 ]; then
    if [ $full_install = true ]; then
      packages_to_install+=" ${not_installed[@]}"
    else
      not_installed_names=()
      for installed_package in ${not_installed[@]}; do
        IFS='_' read -ra ADDR <<< "$installed_package"
        name=$(echo ${ADDR[@]:2} | tr ' ' '_')
        not_installed_names+=("$name")
      done
      invalid_input=true
      input=0
      echo Packages of type $package_type that can be installed are:
      echo ${not_installed_names[@]}
      echo Enter the packages you wish to install, seperated by spaces:
      echo If you wish to install none, press enter.
      while [[ $invalid_input = true && ${#input} -ge 1 ]]; do
        read input
        for entry in $input; do
          if [[ ! " ${not_installed_names[@]} " =~ " ${entry} " ]]; then
            invalid_input=true
            echo Invalid input given: $input
          else
            packages_to_install+=("${package_folder}/eager_${package_type}_${entry}")
            invalid_input=false
          fi
        done
      done
    fi
  fi
  let COUNTER++
done

for package_to_install in ${packages_to_install[@]}; do
  ln -s ${EAGER_HOME}/$package_to_install
done

cd ${EAGER_WS}/src
packages=$(ls)
if [[ " $packages " =~ "eager_bridge_gazebo"  ||
    " $packages " =~ "eager_bridge_pybullet" ||
    " $packages " =~ "eager_bridge_real" ]] &&
    [[ " $packages " =~ "eager_robot_ur5e" ]]; then
  # install universal robot packages UR5 robot package
  echo "Installing UR robot packages"
  if [ ! -d ${EAGER_WS}/src/universal_robot ]; then
    cd ${EAGER_WS}/src
    git clone -b melodic-devel https://github.com/ros-industrial/universal_robot.git
  fi
  # install universal robot packages UR5 robot package
  if [ ! -d ${EAGER_WS}/src/ur_modern_driver ]; then
    cd ${EAGER_WS}/src
    git clone -b kinetic-devel https://github.com/ros-industrial/ur_modern_driver.git
  fi
fi

cd ${EAGER_WS}/src
packages=$(ls)
if [[ " $packages " =~ "eager_bridge_gazebo"  ||
    " $packages " =~ "eager_bridge_pybullet" ||
    " $packages " =~ "eager_bridge_real" ]] &&
    [[ " $packages " =~ "eager_robot_vx300s" ]]; then
  # install Interbotix packages
  echo "Installing Interbotix robot packages"
  if [ ! -d ${EAGER_WS}/src/interbotix_ros_manipulators ]; then
    cd ${EAGER_WS}/src
    git clone -b $ROS_DISTRO https://github.com/Interbotix/interbotix_ros_manipulators.git
  fi
  # Step 5: Setup Environment Variables (from https://github.com/Interbotix/interbotix_ros_manipulators/blob/main/interbotix_ros_uxarms/install/uxarm_remote_install.sh)
  if [ -z "$ROS_IP" ]; then
    echo "Setting up Environment Variables..."
    echo "export ROS_MASTER_URI=http://$HOSTNAME.local:11311" >> ~/.bashrc
    echo 'export ROS_IP=$(echo `hostname -I | cut -d" " -f1`)' >> ~/.bashrc
    echo -e 'if [ -z "$ROS_IP" ]; then\n\texport ROS_IP=127.0.0.1\nfi' >> ~/.bashrc
  else
    echo "Environment variables already set!"
  fi
fi

cd ${EAGER_WS}
rosdep update --rosdistro $ROS_DISTRO
rosdep install --from-paths src --ignore-src -r -y
catkin_make
