<?xml version="1.0"?>
<launch>
	<arg name="env_name" default="ros_env" doc="Name of the RosEnv"/>
	<arg name="robot_name" default="ur5e1" doc="Name of the robot"/>
	<arg name="moveit_package" default="ur5_e_moveit_config" doc="Moveit package name"/>
	<arg name="sensor_topic" default="joint_sensors" doc="Name of the sensor topic"/>
	<arg name="actuator_topic" default="joints" doc="Name of the actuator topic"/>
	<arg name="joint_names" default="[shoulder_pan_joint,
                                    shoulder_lift_joint,
                                    elbow_joint,
                                    wrist_1_joint,
                                    wrist_2_joint,
                                    wrist_3_joint]"
                                    doc="Joint names"/>
  <arg name="group_name" default="manipulator" doc="Specifies the name of the move_group"/>
  <arg name="checks_per_rad" default="25" doc="Specifies the number of collision checks per radian"/>
  <arg name="vel_limit" default="3.0" doc="Specifies the joint velocity limit in rad/s"/>
  <arg name="step_time" default="0.1" doc="Specifies the step time of the physics bridge in s"/>
  <arg name="duration" default="0.5" doc="Specifies the duration for the joint trajectory point action in s"/>
	
	<!-- MoveIt arguments -->
	<arg name="allow_trajectory_execution" default="false" doc="Specifies whether MoveIt trajectory execution should be launched"/>
	<arg name="publish_monitored_planning_scene" default="false"/>
  <arg name="fake_execution" default="false"/>
  
	<group ns="$(arg env_name)/objects/$(arg robot_name)">
	
	  <!-- Launch moveit for collision checking -->
		  <!-- Remap follow_joint_trajectory -->
  	<remap from="/follow_joint_trajectory" to="arm_controller/follow_joint_trajectory"/>

		<include file="$(eval find(arg('moveit_package')) + '/launch/move_group.launch')">
			<arg name="allow_trajectory_execution" value="$(arg allow_trajectory_execution)"/>
			<arg name="publish_monitored_planning_scene" value="$(arg publish_monitored_planning_scene)"/>
			<arg name="fake_execution" value="$(arg fake_execution)"/>
		</include>

	  <node name="safe_actions" pkg="ros_gym_process_safe_actions" type="safe_actions_node.py">
	  	<param name="sensor_topic" value="$(arg sensor_topic)"/>
	  	<param name="actuator_topic" value="$(arg actuator_topic)"/>
	  	<rosparam param="joint_names" subst_value="True">$(arg joint_names)</rosparam> 
	    <param name="group_name" value="$(arg group_name)"/>
	    <param name="checks_per_rad" value="$(arg checks_per_rad)"/>
	    <param name="vel_limit" value="$(arg vel_limit)"/>
	    <param name="step_time" value="$(arg step_time)"/>
	    <param name="duration" value="$(arg duration)"/>
	  </node>
	</group>
  
</launch>
